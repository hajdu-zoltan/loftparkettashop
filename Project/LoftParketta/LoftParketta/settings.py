"""
Django settings for LoftParketta project.

Generated by 'django-admin startproject' using Django 4.2.14.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z2qdg^xz8+hugvc3q0^pj@*(q0byxl2c^86kp2av%vhf@b1b$)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '192.168.0.15', '192.168.1.167']
SITE_ID = 1
SITE_DOMAIN = '0.0.0.0:8000'

SOCIALACCOUNT_LOGIN_ON_GET=True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_otp',
    'django_otp.plugins.otp_static',
    'django_otp.plugins.otp_totp',
    #'two_factor',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'shop',  # saját alkalmazásod
    'shopping_cart',
    'users',
    'captcha',
    'django_recaptcha',
    'crispy_forms',
    'crispy_bootstrap5',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_otp.middleware.OTPMiddleware',  # OTP Middleware hozzáadása
    'allauth.account.middleware.AccountMiddleware',  # Allauth Account Middleware hozzáadása
]

SESSION_ENGINE = 'django.contrib.sessions.backends.db'
CART_SESSION_ID = 'cart'

ROOT_URLCONF = 'LoftParketta.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_processor.cart_total_amount',
            ],
        },
    },
]

WSGI_APPLICATION = 'LoftParketta.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'shop',        # Cseréld le az adatbázis nevére
        'USER': 'root',      # Cseréld le az adatbázis felhasználó nevére
        'PASSWORD': '',           # Cseréld le az adatbázis jelszavára
        'HOST': 'localhost',            # Ha a MySQL nem helyben fut, add meg a megfelelő hostot
        'PORT': '3306',                 # Az alapértelmezett MySQL port (ha eltérő, add meg)
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'hu'

TIME_ZONE = 'Europe/Budapest'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Kétfaktoros hitelesítés beállítások
#LOGIN_URL = 'two_factor:login'
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3
ACCOUNT_USERNAME_REQUIRED = False
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

#AUTH_USER_MODEL = 'users.CustomUser'
# settings.py
AUTH_USER_MODEL = 'users.CustomUser'  # Itt az 'app_name' a CustomUser modellt tartalmazó app neve

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Alapértelmezett backend
    'allauth.account.auth_backends.AuthenticationBackend',
]

RECAPTCHA_PUBLIC_KEY = '6LdLXOMiAAAAAIrk7xvnfv0xo0oyU7kmcIv4zY2Z'
RECAPTCHA_PRIVATE_KEY = '6LdLXOMiAAAAADAgysHMK4WGWWCAr0TBddfsUd2g'
SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']

# További beállítások, ha szükséges
SITE_ID = 1
SITE_URL = 'http://127.0.0.1:8000'
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"  # Vagy "bootstrap4", ha a 4-es verziót használod

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
#EMAIL_HOST_USER = 'figaroszeged@gmail.com'
#EMAIL_HOST_PASSWORD = 'kqtadpahcatapajg'
EMAIL_HOST_USER = 'vkasztalos@gmail.com'
EMAIL_HOST_PASSWORD = 'idwyqwdhfiufmmyw'

PASSWORD_RESET_TIMEOUT = 14400

DATA_UPLOAD_MAX_MEMORY_SIZE = 5242880 # 5MB

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

# settings.py

BARION_API_URL = "https://api.test.barion.com/v2/Payment/Start"  # Tesztkörnyezet URL-je
BARION_POS_KEY = "57b233ce-3ba1-4305-9117-1149002ec392"  # POS kulcsod
BARION_PUBLIC_ID = "34b50e62-85f4-4fca-8d03-dff0e4d32251"  # Publikus azonosító
BARION_PIXEL_ID = "BP-s4UecBuBU8-4A"  # Barion Pixel Azonosító
BARION_CALLBACK_URL = "https://yourdomain.com/payment/callback/"  # Callback URL
